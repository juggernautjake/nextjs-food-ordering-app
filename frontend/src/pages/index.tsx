// src/pages/index.tsx

import React, { useState } from "react";
import Head from "next/head";
import { gql, useQuery } from "@apollo/client";
import RestaurantViewer from "@/components/viewers/RestaurantViewer";
import Loader from "@/components/common/Loader";
import { useAppContext } from "@/context/AppContext";
import { Client } from "@googlemaps/google-maps-services-js";

const GET_PROMOTIONS = gql`
  query GetPromotions {
    promotions {
      data {
        id
        attributes {
          title
          description
          restaurant {
            data {
              id
              attributes {
                name
              }
            }
          }
        }
      }
    }
  }
`;

interface Location {
  latitude: number;
  longitude: number;
}

function Home() {
  const [query, setQuery] = useState<string>("");
  const [location, setLocation] = useState<Location | null>(null);
  const { user } = useAppContext();

  const { loading: loadingPromotions, error: errorPromotions, data: dataPromotions } = useQuery(GET_PROMOTIONS);

  const promotions = dataPromotions?.promotions?.data || [];

  const handleLocationChange = async (address: string) => {
    const client = new Client({});
    try {
      const response = await client.geocode({
        params: {
          address: address,
          key: process.env.NEXT_PUBLIC_GOOGLE_API_KEY || "",
        },
      });
      const { lat, lng } = response.data.results[0].geometry.location;
      setLocation({ latitude: lat, longitude: lng });
    } catch (error) {
      console.error("Error fetching coordinates for address:", error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="restaurant-list-page mx-auto container m-6">
        <div className="restaurant-list-content">
          <div className="mb-6">
            <input
              id="search-query"
              name="search-query"
              className="search-bar appearance-none block w-full p-3 leading-5 text-coolGray-900 border border-coolGray-200 rounded-lg shadow-md placeholder-coolGray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50"
              type="text"
              placeholder="Search restaurants"
              onChange={(e) => setQuery(e.target.value)}
            />
            <input
              id="address"
              name="address"
              className="location-bar appearance-none block w-full p-3 mt-4 leading-5 text-coolGray-900 border border-coolGray-200 rounded-lg shadow-md placeholder-coolGray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50"
              type="text"
              placeholder="Enter address"
              onBlur={(e) => handleLocationChange(e.target.value)}
            />
          </div>
          <h2 className="text-2xl font-bold mb-6">Nearby Restaurants</h2>
          <RestaurantViewer query={query} location={location} favorited={false} />
        </div>
        {user && (
          <div>
            <h2 className="text-2xl font-bold mb-6">Favorite Restaurants</h2>
            <RestaurantViewer query={query} location={location} favorited={true} />
          </div>
        )}
        <div>
          <h2 className="text-2xl font-bold mb-6">Current Promotions</h2>
          {loadingPromotions && <Loader />}
          {errorPromotions && <p>Error loading promotions: {errorPromotions.message}</p>}
          <ul>
            {promotions.length === 0 ? (
              <p>No promotions to show</p>
            ) : (
              promotions.map((promotion: { id: number; attributes: { title: string; description: string; restaurant: { data: { attributes: { name: string } } } } }) => (
                <li key={promotion.id} className="mb-4">
                  <div className="p-4 bg-white rounded-lg shadow-md">
                    <h3 className="font-bold text-lg">{promotion.attributes.title}</h3>
                    <p>{promotion.attributes.description}</p>
                    <p>At: {promotion.attributes.restaurant.data.attributes.name}</p>
                  </div>
                </li>
              ))
            )}
          </ul>
        </div>
      </main>
    </>
  );
}

export default Home;
